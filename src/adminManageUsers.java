/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zhengkai Xie
 */

import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import project.*;

public class adminManageUsers extends javax.swing.JFrame {

    /**
     * Creates new form adminManageUsers
     */
    String userName;
    String email;
    public adminManageUsers() {
        initComponents();
        emailTitleInput.setEditable(false);
        emailInput.setEditable(false);
        sendEmailButton.setEnabled(false);
        manageAccountButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchText = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        searchInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        accountTable = new javax.swing.JTable();
        emailGuideText = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        emailInput = new javax.swing.JTextArea();
        sendEmailButton = new javax.swing.JButton();
        manageAccountButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        emailTitleText = new javax.swing.JLabel();
        emailTitleInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(85, 237));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchText.setText("Search By Name or Email");
        getContentPane().add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        searchButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, -1, -1));
        getContentPane().add(searchInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 244, -1));

        accountTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        accountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Email", "Unreturned Books ID", "Earliest Deadline", "Active"
            }
        ));
        accountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(accountTable);
        if (accountTable.getColumnModel().getColumnCount() > 0) {
            accountTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            accountTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            accountTable.getColumnModel().getColumn(2).setPreferredWidth(80);
            accountTable.getColumnModel().getColumn(4).setPreferredWidth(15);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 90, 710, 360));

        emailGuideText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailGuideText.setText("Email Text:");
        getContentPane().add(emailGuideText, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 170, -1, -1));

        emailInput.setColumns(20);
        emailInput.setLineWrap(true);
        emailInput.setRows(5);
        jScrollPane2.setViewportView(emailInput);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 200, 314, 159));

        sendEmailButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sendEmailButton.setText("Send Email");
        sendEmailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendEmailButtonActionPerformed(evt);
            }
        });
        getContentPane().add(sendEmailButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 380, -1, -1));

        manageAccountButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        manageAccountButton.setText("Deactivate Account");
        manageAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageAccountButtonActionPerformed(evt);
            }
        });
        getContentPane().add(manageAccountButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 380, -1, -1));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 34, -1));

        emailTitleText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailTitleText.setText("Email Title:");
        getContentPane().add(emailTitleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 90, -1, -1));
        getContentPane().add(emailTitleInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 130, 310, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/adminFunctionsBackground.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        ResultSet usersRs = Select.getData("select *from users");
        DefaultTableModel model = (DefaultTableModel)accountTable.getModel();
        SimpleDateFormat myFormat=new SimpleDateFormat("yyyy/MM/dd");
        model.setRowCount(0);
        try{
            while(usersRs.next()){
                StringBuilder userNameQuerySb = new StringBuilder(usersRs.getString(1));
                String userNameQuery = UpdateData.dealSpcialSymbols(userNameQuerySb);
                ResultSet ordersRs = Select.getData("select *from orders where userName='"+userNameQuery+"' and status='Incomplete'");
                StringBuilder bookSb = new StringBuilder();
                String deadline = new String();
                while(ordersRs.next()){
                    bookSb.append(String.valueOf(ordersRs.getInt(3)));
                    bookSb.append(", ");
                    if(deadline.equals("") || myFormat.parse(deadline).after(myFormat.parse(ordersRs.getString(5)))){
                        deadline = ordersRs.getString(5);
                    }
                }
                if(!bookSb.isEmpty()){
                    bookSb.delete(bookSb.length()-2, bookSb.length());
                }else{
                    bookSb.append("None");
                }
                if(deadline.equals("")){
                    deadline = "None";
                }
                model.addRow(new Object[]{usersRs.getString(1), usersRs.getString(2), bookSb.toString(), deadline, usersRs.getString(6)});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void accountTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountTableMouseClicked
        int index = accountTable.getSelectedRow();
        TableModel model = accountTable.getModel();
        StringBuilder userNameSb = new StringBuilder(model.getValueAt(index, 0).toString());
        userName = UpdateData.dealSpcialSymbols(userNameSb);
        StringBuilder emailSb = new StringBuilder(model.getValueAt(index, 1).toString());
        email = UpdateData.dealSpcialSymbols(emailSb);
        String status = model.getValueAt(index, 4).toString();
        if(status.equals("false")){
            
            manageAccountButton.setText("Activate Account");
        }else{
            manageAccountButton.setText("Deactivate Account");
        }
        emailTitleInput.setEditable(true);
        emailInput.setEditable(true);
        sendEmailButton.setEnabled(true);
        manageAccountButton.setEnabled(true);
    }//GEN-LAST:event_accountTableMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        StringBuilder searchSb = new StringBuilder(searchInput.getText());
        String search = UpdateData.dealSpcialSymbols(searchSb);
        ResultSet usersRs = Select.getData("select *from users where userName like '%"+search+"%' or email like '%"+search+"%'");
        DefaultTableModel model = (DefaultTableModel)accountTable.getModel();
        SimpleDateFormat myFormat=new SimpleDateFormat("yyyy/MM/dd");
        model.setRowCount(0);
        try{
            while(usersRs.next()){
                StringBuilder userNameQuerySb = new StringBuilder(usersRs.getString(1));
                String userNameQuery = UpdateData.dealSpcialSymbols(userNameQuerySb);
                ResultSet ordersRs = Select.getData("select *from orders where userName='"+userNameQuery+"' and status='Incomplete'");
                StringBuilder bookSb = new StringBuilder();
                String deadline = new String();
                while(ordersRs.next()){
                    bookSb.append(String.valueOf(ordersRs.getInt(3)));
                    bookSb.append(", ");
                    if(deadline.equals("") || myFormat.parse(deadline).after(myFormat.parse(ordersRs.getString(5)))){
                        deadline = ordersRs.getString(5);
                    }
                }
                if(!bookSb.isEmpty()){
                    bookSb.delete(bookSb.length()-2, bookSb.length());
                }else{
                    bookSb.append("None");
                }
                if(deadline.equals("")){
                    deadline = "None";
                }
                model.addRow(new Object[]{usersRs.getString(1), usersRs.getString(2), bookSb.toString(), deadline, usersRs.getString(6)});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void sendEmailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendEmailButtonActionPerformed
        manageAccountButton.setEnabled(false);
        sendEmailButton.setEnabled(false);
        String emailContent = emailInput.getText();
        String emailTitle = emailTitleInput.getText();
        if(emailTitle.equals("")){
            JOptionPane.showMessageDialog(null, "The email needs a title!");
            return;
        }
        if(emailContent.equals("")){
            JOptionPane.showMessageDialog(null, "The email needs content!");
            return;
        }
        Email.sendEmail(email, emailContent, emailTitle, 2);
        setVisible(false);
        new adminManageUsers().setVisible(true);
    }//GEN-LAST:event_sendEmailButtonActionPerformed

    private void manageAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageAccountButtonActionPerformed
        manageAccountButton.setEnabled(false);
        sendEmailButton.setEnabled(false);
        if(manageAccountButton.getText().equals("Deactivate Account")){
            UpdateData.setData("update users set status='false' where userName='"+userName+"'", "Account Status updated!");
            String emailContent = "Sorry, your account has been deactivated. You will not be able to log in using this account anymore.";
            String emailTitle = "Account Deactivation Notification";
            Email.sendEmail(email, emailContent, emailTitle, 2);
        }else{
            UpdateData.setData("update users set status='true' where userName='"+userName+"'", "Account Status updated!");
            String emailContent = "Your account has been activated. You can log in using this account now.";
            String emailTitle = "Account Activation Notification";
            Email.sendEmail(email, emailContent, emailTitle, 2);
        }
        setVisible(false);
        new adminManageUsers().setVisible(true);
    }//GEN-LAST:event_manageAccountButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminManageUsers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accountTable;
    private javax.swing.JLabel emailGuideText;
    private javax.swing.JTextArea emailInput;
    private javax.swing.JTextField emailTitleInput;
    private javax.swing.JLabel emailTitleText;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton manageAccountButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JLabel searchText;
    private javax.swing.JButton sendEmailButton;
    // End of variables declaration//GEN-END:variables
}
