/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Zhengkai Xie
 */
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import project.*;

public class adminCheckOrders extends javax.swing.JFrame {

    /**
     * Creates new form adminCheckOrders
     */
    public adminCheckOrders() {
        initComponents();
        idData1.setEditable(false);
        titleData1.setEditable(false);
        authorData1.setEditable(false);
        genreData1.setEditable(false);
        publishYearData1.setEditable(false);
        editionData1.setEditable(false);
        locationData1.setEditable(false);
        descriptionData1.setEditable(false);
        searchTitleInput.setEditable(false);
        searchNameInput.setEditable(false);
        searchDeadlineInput.setEnabled(false);
        searchReturnDateInput.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idDescText = new javax.swing.JLabel();
        titleDescText = new javax.swing.JLabel();
        authorDescText = new javax.swing.JLabel();
        genreDescText = new javax.swing.JLabel();
        yearDescText = new javax.swing.JLabel();
        editionDescText = new javax.swing.JLabel();
        locationDescText = new javax.swing.JLabel();
        descriptionText = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descriptionData = new javax.swing.JTextArea();
        locationData = new javax.swing.JTextField();
        editionData = new javax.swing.JTextField();
        publishYearData = new javax.swing.JTextField();
        genreData = new javax.swing.JTextField();
        authorData = new javax.swing.JTextField();
        titleData = new javax.swing.JTextField();
        idData = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        idDescText1 = new javax.swing.JLabel();
        titleDescText1 = new javax.swing.JLabel();
        authorDescText1 = new javax.swing.JLabel();
        genreDescText1 = new javax.swing.JLabel();
        yearDescText1 = new javax.swing.JLabel();
        editionDescText1 = new javax.swing.JLabel();
        locationDescText1 = new javax.swing.JLabel();
        descriptionText1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionData1 = new javax.swing.JTextArea();
        locationData1 = new javax.swing.JTextField();
        editionData1 = new javax.swing.JTextField();
        publishYearData1 = new javax.swing.JTextField();
        genreData1 = new javax.swing.JTextField();
        authorData1 = new javax.swing.JTextField();
        titleData1 = new javax.swing.JTextField();
        idData1 = new javax.swing.JTextField();
        searchGuideText = new javax.swing.JLabel();
        bookTitleSearchOptionInput = new javax.swing.JCheckBox();
        deadlineSearchOptionInput = new javax.swing.JCheckBox();
        returnDateSearchOptionInput = new javax.swing.JCheckBox();
        bookTitleSearchText = new javax.swing.JLabel();
        searchTitleInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        searchDeadlineInput = new com.toedter.calendar.JDateChooser();
        searchReturnDateInput = new com.toedter.calendar.JDateChooser();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        searchNameInput = new javax.swing.JTextField();
        userNameSearchOptionInput = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();

        idDescText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        idDescText.setText("ID:");

        titleDescText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleDescText.setText("Title:");

        authorDescText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        authorDescText.setText("Author:");

        genreDescText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        genreDescText.setText("Genre:");

        yearDescText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yearDescText.setText("Publish Year:");

        editionDescText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editionDescText.setText("Edition:");

        locationDescText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        locationDescText.setText("Location:");

        descriptionText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        descriptionText.setText("Description:");

        descriptionData.setColumns(20);
        descriptionData.setLineWrap(true);
        descriptionData.setRows(5);
        jScrollPane2.setViewportView(descriptionData);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(85, 237));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bookTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Borrower", "Book ID", "Borrow Date", "Deadline", "Return Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 600, 390));

        idDescText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        idDescText1.setText("ID:");
        getContentPane().add(idDescText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 80, -1, -1));

        titleDescText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleDescText1.setText("Title:");
        getContentPane().add(titleDescText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 120, 40, -1));

        authorDescText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        authorDescText1.setText("Author:");
        getContentPane().add(authorDescText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 150, -1, -1));

        genreDescText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        genreDescText1.setText("Genre:");
        getContentPane().add(genreDescText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 190, -1, -1));

        yearDescText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yearDescText1.setText("Year:");
        getContentPane().add(yearDescText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 230, -1, -1));

        editionDescText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editionDescText1.setText("Edition:");
        getContentPane().add(editionDescText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 270, -1, -1));

        locationDescText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        locationDescText1.setText("Location:");
        getContentPane().add(locationDescText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 310, -1, -1));

        descriptionText1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        descriptionText1.setText("Description:");
        getContentPane().add(descriptionText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 350, -1, -1));

        descriptionData1.setColumns(20);
        descriptionData1.setLineWrap(true);
        descriptionData1.setRows(5);
        jScrollPane3.setViewportView(descriptionData1);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 350, 240, 110));
        getContentPane().add(locationData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 310, 240, -1));
        getContentPane().add(editionData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 270, 240, -1));
        getContentPane().add(publishYearData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 230, 240, -1));
        getContentPane().add(genreData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 190, 240, -1));
        getContentPane().add(authorData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 150, 240, -1));
        getContentPane().add(titleData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 120, 240, -1));
        getContentPane().add(idData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 80, 240, -1));

        searchGuideText.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchGuideText.setText("Search:");
        getContentPane().add(searchGuideText, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 11, -1, -1));

        bookTitleSearchOptionInput.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bookTitleSearchOptionInput.setText("Book Title");
        bookTitleSearchOptionInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTitleSearchOptionInputActionPerformed(evt);
            }
        });
        getContentPane().add(bookTitleSearchOptionInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 7, -1, -1));

        deadlineSearchOptionInput.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        deadlineSearchOptionInput.setText("Deadline");
        deadlineSearchOptionInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deadlineSearchOptionInputActionPerformed(evt);
            }
        });
        getContentPane().add(deadlineSearchOptionInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 7, 81, -1));

        returnDateSearchOptionInput.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        returnDateSearchOptionInput.setText("Return Date");
        returnDateSearchOptionInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnDateSearchOptionInputActionPerformed(evt);
            }
        });
        getContentPane().add(returnDateSearchOptionInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 7, -1, -1));

        bookTitleSearchText.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bookTitleSearchText.setText("Book Title:");
        getContentPane().add(bookTitleSearchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 40, -1, -1));
        getContentPane().add(searchTitleInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 210, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Deadline:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Return Date:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 40, -1, -1));

        searchDeadlineInput.setDateFormatString("yyyy/MM/dd");
        getContentPane().add(searchDeadlineInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, 120, -1));

        searchReturnDateInput.setDateFormatString("yyyy/MM/dd");
        getContentPane().add(searchReturnDateInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 40, 120, -1));

        searchButton.setBackground(new java.awt.Color(255, 255, 255));
        searchButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 40, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("User Name:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 70, -1));
        getContentPane().add(searchNameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, -1));

        userNameSearchOptionInput.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userNameSearchOptionInput.setText("User Name");
        userNameSearchOptionInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameSearchOptionInputActionPerformed(evt);
            }
        });
        getContentPane().add(userNameSearchOptionInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 7, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/adminFunctionsBackground.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        int index=bookTable.getSelectedRow();
        TableModel model=bookTable.getModel();
        String stringId=model.getValueAt(index, 2).toString();
        int bookId=Integer.parseInt(stringId);
        ResultSet rs=Select.getData("select *from books where id='"+bookId+"'");
        try{
            if(rs.next()){
                idData1.setText(stringId);
                titleData1.setText(rs.getString(2));
                authorData1.setText(rs.getString(3));
                genreData1.setText(rs.getString(4));
                publishYearData1.setText(rs.getString(5));
                editionData1.setText(rs.getString(6));
                locationData1.setText(rs.getString(7));
                descriptionData1.setText(rs.getString(8));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_bookTableMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        ResultSet rs = Select.getData("select *from orders");
        DefaultTableModel model=(DefaultTableModel)bookTable.getModel();
        model.setRowCount(0);
        try{
            while(rs.next()){
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7)});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        boolean searchByBookTitle = bookTitleSearchOptionInput.isSelected();
        boolean searchByName = userNameSearchOptionInput.isSelected();
        boolean searchByDeadline = deadlineSearchOptionInput.isSelected();
        boolean searchByReturnDate = returnDateSearchOptionInput.isSelected();
        StringBuilder Query = new StringBuilder("select *from orders where ");
        SimpleDateFormat myFormat=new SimpleDateFormat("yyyy/MM/dd");
        
        if(!searchByBookTitle && !searchByName && !searchByDeadline && !searchByReturnDate){
            JOptionPane.showMessageDialog(null, "Need to select at least one way to search.");
            return;
        }
        if(searchByBookTitle){
            StringBuilder titleSb = new StringBuilder(searchTitleInput.getText());
            String title = UpdateData.dealSpcialSymbols(titleSb);
            StringBuilder titleQueryAddition = new StringBuilder("(");
            if(!title.equals("")){
                ResultSet rs = Select.getData("select *from books where title like '%"+title+"%'");
                try{
                    while(rs.next()){
                        titleQueryAddition.append("bookId='"+rs.getInt(1)+"' or ");
                    }
                    if(titleQueryAddition.length()>1){
                        for(int i=0; i<4; i++){
                            titleQueryAddition.deleteCharAt(titleQueryAddition.length()-1);
                        }
                        titleQueryAddition.append(") and ");
                    }
                    Query.append(titleQueryAddition.toString());
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Need to type something in title search bar!");
            }
        }
        if(searchByName){
            StringBuilder nameSb = new StringBuilder(searchNameInput.getText());
            String name = UpdateData.dealSpcialSymbols(nameSb);
            if(!name.equals("")){
                Query.append("userName like '%"+name+"%' and ");
            }else{
                JOptionPane.showMessageDialog(null, "Need to type something in user name search bar!");
            }
        }
        if(searchByDeadline){
            Date deadline = searchDeadlineInput.getDate();
            if(deadline!=null){
                String deadlineString = myFormat.format(deadline);
                Query.append("deadline='"+deadlineString+"' and ");
            }else{
                JOptionPane.showMessageDialog(null, "Need to choose a date in deadline calendar!");
            }
        }
        if(searchByReturnDate){
            Date returnDate = searchReturnDateInput.getDate();
            if(returnDate!=null){
                String returnDateString = myFormat.format(returnDate);
                Query.append("returnDate='"+returnDateString+"' and ");
            }else{
                JOptionPane.showMessageDialog(null, "Need to choose a date in deadline calendar!");
            }
        }
        System.out.println(Query.toString());
        Query.delete(Query.length()-5, Query.length());
        ResultSet rs = Select.getData(Query.toString());
        DefaultTableModel model=(DefaultTableModel)bookTable.getModel();
        model.setRowCount(0);
        try{
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7)});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void bookTitleSearchOptionInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTitleSearchOptionInputActionPerformed
        if(bookTitleSearchOptionInput.isSelected()){
            searchTitleInput.setEditable(true);
        }else{
            searchTitleInput.setEditable(false);
        }
    }//GEN-LAST:event_bookTitleSearchOptionInputActionPerformed

    private void userNameSearchOptionInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameSearchOptionInputActionPerformed
        // TODO add your handling code here:
        if(userNameSearchOptionInput.isSelected()){
            searchNameInput.setEditable(true);
        }else{
            searchNameInput.setEditable(false);
        }
    }//GEN-LAST:event_userNameSearchOptionInputActionPerformed

    private void deadlineSearchOptionInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deadlineSearchOptionInputActionPerformed
        if(deadlineSearchOptionInput.isSelected()){
            searchDeadlineInput.setEnabled(true);
        }else{
            searchDeadlineInput.setEnabled(false);
        }
    }//GEN-LAST:event_deadlineSearchOptionInputActionPerformed

    private void returnDateSearchOptionInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnDateSearchOptionInputActionPerformed
        if(returnDateSearchOptionInput.isSelected()){
            searchReturnDateInput.setEnabled(true);
        }else{
            searchReturnDateInput.setEnabled(false);
        }
    }//GEN-LAST:event_returnDateSearchOptionInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminCheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminCheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminCheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminCheckOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminCheckOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorData;
    private javax.swing.JTextField authorData1;
    private javax.swing.JLabel authorDescText;
    private javax.swing.JLabel authorDescText1;
    private javax.swing.JTable bookTable;
    private javax.swing.JCheckBox bookTitleSearchOptionInput;
    private javax.swing.JLabel bookTitleSearchText;
    private javax.swing.JCheckBox deadlineSearchOptionInput;
    private javax.swing.JTextArea descriptionData;
    private javax.swing.JTextArea descriptionData1;
    private javax.swing.JLabel descriptionText;
    private javax.swing.JLabel descriptionText1;
    private javax.swing.JTextField editionData;
    private javax.swing.JTextField editionData1;
    private javax.swing.JLabel editionDescText;
    private javax.swing.JLabel editionDescText1;
    private javax.swing.JTextField genreData;
    private javax.swing.JTextField genreData1;
    private javax.swing.JLabel genreDescText;
    private javax.swing.JLabel genreDescText1;
    private javax.swing.JTextField idData;
    private javax.swing.JTextField idData1;
    private javax.swing.JLabel idDescText;
    private javax.swing.JLabel idDescText1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField locationData;
    private javax.swing.JTextField locationData1;
    private javax.swing.JLabel locationDescText;
    private javax.swing.JLabel locationDescText1;
    private javax.swing.JTextField publishYearData;
    private javax.swing.JTextField publishYearData1;
    private javax.swing.JCheckBox returnDateSearchOptionInput;
    private javax.swing.JButton searchButton;
    private com.toedter.calendar.JDateChooser searchDeadlineInput;
    private javax.swing.JLabel searchGuideText;
    private javax.swing.JTextField searchNameInput;
    private com.toedter.calendar.JDateChooser searchReturnDateInput;
    private javax.swing.JTextField searchTitleInput;
    private javax.swing.JTextField titleData;
    private javax.swing.JTextField titleData1;
    private javax.swing.JLabel titleDescText;
    private javax.swing.JLabel titleDescText1;
    private javax.swing.JCheckBox userNameSearchOptionInput;
    private javax.swing.JLabel yearDescText;
    private javax.swing.JLabel yearDescText1;
    // End of variables declaration//GEN-END:variables
}
