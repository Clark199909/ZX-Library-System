
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import project.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zhengkai Xie
 */
public class adminManageItems extends javax.swing.JFrame {

    /**
     * Creates new form adminManageItems
     */
    public adminManageItems() {
        initComponents();
        setComponentNames();
    }
    int id=1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        bookTitleText = new javax.swing.JLabel();
        bookAuthorText = new javax.swing.JLabel();
        bookGenreText = new javax.swing.JLabel();
        bookPublishYearText = new javax.swing.JLabel();
        bookEditionText = new javax.swing.JLabel();
        bookLocationText = new javax.swing.JLabel();
        bookDescriptionText = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookDescriptionInput = new javax.swing.JTextArea();
        addBookButton = new javax.swing.JButton();
        bookAuthorInput = new javax.swing.JTextField();
        bookPublishYearInput = new javax.swing.JComboBox<>();
        bookLocationInput = new javax.swing.JTextField();
        bookEditionInput = new javax.swing.JComboBox<>();
        bookTitleInput = new javax.swing.JTextField();
        bookGenreInput = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        searchInput = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        searchTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(85, 237));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Author", "Genre", "Year", "Edition", "Location", "Status"
            }
        ));
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 67, 580, 380));

        bookTitleText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookTitleText.setText("Title");
        getContentPane().add(bookTitleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 34, -1));

        bookAuthorText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookAuthorText.setText("Author");
        getContentPane().add(bookAuthorText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 69, -1, -1));

        bookGenreText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookGenreText.setText("Genre");
        getContentPane().add(bookGenreText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 108, 41, -1));

        bookPublishYearText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookPublishYearText.setText("Publish Year");
        getContentPane().add(bookPublishYearText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 147, -1, -1));

        bookEditionText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookEditionText.setText("Edition");
        getContentPane().add(bookEditionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 186, -1, -1));

        bookLocationText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookLocationText.setText("Location");
        getContentPane().add(bookLocationText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 222, -1, -1));

        bookDescriptionText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookDescriptionText.setText("Brief Description");
        getContentPane().add(bookDescriptionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 261, -1, -1));

        bookDescriptionInput.setColumns(20);
        bookDescriptionInput.setLineWrap(true);
        bookDescriptionInput.setRows(5);
        jScrollPane2.setViewportView(bookDescriptionInput);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 294, 359, 99));

        addBookButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addBookButton.setText("Add Book");
        addBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addBookButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 404, -1, -1));

        bookAuthorInput.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(bookAuthorInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 66, 235, -1));

        bookPublishYearInput.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookPublishYearInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900", "1899", "1898", "1897", "1896", "1895", "1894", "1893", "1892", "1891", "1890", "1889", "1888", "1887", "1886", "1885", "1884", "1883", "1882", "1881", "1880", "1879", "1878", "1877", "1876", "1875", "1874", "1873", "1872", "1871", "1870", "1869", "1868", "1867", "1866", "1865", "1864", "1863", "1862", "1861", "1860", "1859", "1858", "1857", "1856", "1855", "1854", "1853", "1852", "1851", "1850", "1849", "1848", "1847", "1846", "1845", "1844", "1843", "1842", "1841", "1840", "1839", "1838", "1837", "1836", "1835", "1834", "1833", "1832", "1831", "1830", "1829", "1828", "1827", "1826", "1825", "1824", "1823", "1822", "1821", "1820", "1819", "1818", "1817", "1816", "1815", "1814", "1813", "1812", "1811", "1810", "1809", "1808", "1807", "1806", "1805", "1804", "1803", "1802", "1801", "1800" }));
        getContentPane().add(bookPublishYearInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 144, 235, -1));

        bookLocationInput.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(bookLocationInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 222, 235, -1));

        bookEditionInput.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookEditionInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100" }));
        getContentPane().add(bookEditionInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 183, 235, -1));

        bookTitleInput.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(bookTitleInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 27, 235, -1));

        bookGenreInput.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookGenreInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Biography", "Classics", "Comic", "Cookbook", "Crime", "Detective and Mystery", "Essays", "Fantasy", "Historical Fiction", "History", "Horror", "Literary Fiction", "Memoir", "Poetry", "Romance", "Science Fiction", "Thriller" }));
        getContentPane().add(bookGenreInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 105, 235, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, -1, -1));
        getContentPane().add(searchInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 320, -1));

        searchButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, -1, -1));

        searchTitle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchTitle.setText("Search by Title");
        getContentPane().add(searchTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/adminFunctionsBackground.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void addBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookButtonActionPerformed
        StringBuilder titleSb = new StringBuilder(bookTitleInput.getText());
        String title = UpdateData.dealSpcialSymbols(titleSb);
        StringBuilder authorSb = new StringBuilder(bookAuthorInput.getText());
        String author = UpdateData.dealSpcialSymbols(authorSb);
        String genre = (String)bookGenreInput.getSelectedItem();
        String year = (String)bookPublishYearInput.getSelectedItem();
        String edition=(String)bookEditionInput.getSelectedItem();
        StringBuilder locationSb = new StringBuilder(bookLocationInput.getText());
        String location = UpdateData.dealSpcialSymbols(locationSb);
        StringBuilder descriptionSb = new StringBuilder(bookDescriptionInput.getText());
        String description = UpdateData.dealSpcialSymbols(descriptionSb);
        
        if(title.equals("") || author.equals("") || genre.equals("") || year.equals("") || edition.equals("") || location.equals("") || description.equals("")){
            JOptionPane.showMessageDialog(null, "Every field has to be field!");
            return;
        }
        if(addBookButton.getText().equals("Add Book")){
            try{
                String Query="select max(id) from books";
                ResultSet rs=Select.getData(Query);
                while(rs.next()){
                    id=rs.getInt(1);
                }
                id=id+1;
                Query="insert into books values('"+id+"', '"+title+"', '"+author+"', '"+genre+"', '"+year+"', '"+edition+"', '"+location+"', '"+description+"', 'Available')";
                UpdateData.setData(Query, "Successfully updated!");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }else{
            try{
                ResultSet rs=Select.getData("select *from books where id='"+id+"'");
                if(rs.next()){
                    String Query="update books set title='"+title+"', author='"+author+"', genre='"+genre+"', year='"+year+"', edition='"+edition+"', location='"+location+"', description='"+description+"' where id='"+id+"'";
                    UpdateData.setData(Query, "Successfully updated!");
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
        
        
        setVisible(false);
        new adminManageItems().setVisible(true);
    }//GEN-LAST:event_addBookButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        ResultSet rs=Select.getData("select *from books");
        DefaultTableModel model=(DefaultTableModel)bookTable.getModel();
        model.setRowCount(0);
        try{
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(9)});
            }
            rs.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        System.out.println(evt);
        int index=bookTable.getSelectedRow();
        TableModel model=bookTable.getModel();
        String stringId=model.getValueAt(index, 0).toString();
        id=Integer.parseInt(stringId);  
        ResultSet rs=Select.getData("select *from books where id='"+id+"'");
        try{
            if(rs.next()){
                bookTitleInput.setText(rs.getString(2));
                bookAuthorInput.setText(rs.getString(3));
                bookGenreInput.setSelectedItem(rs.getString(4));
                bookPublishYearInput.setSelectedItem(rs.getString(5));
                bookEditionInput.setSelectedItem(rs.getString(6));
                bookLocationInput.setText(rs.getString(7));
                bookDescriptionInput.setText(rs.getString(8));
                addBookButton.setText("Save Changes");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_bookTableMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        StringBuilder keyWordSb = new StringBuilder(searchInput.getText());
        String keyWord = UpdateData.dealSpcialSymbols(keyWordSb);
        ResultSet rs=Select.getData("select *from books where title like '%"+keyWord+"%'");
        DefaultTableModel model=(DefaultTableModel)bookTable.getModel();
        model.setRowCount(0);
        try{
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(9)});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void setComponentNames() {
        addBookButton.setName("addBookButton");
        bookAuthorInput.setName("bookAuthorInput");
        bookDescriptionInput.setName("bookDescriptionInput");
        bookEditionInput.setName("bookEditionInput");
        bookGenreInput.setName("bookGenreInput");
        bookLocationInput.setName("bookLocationInput");
        bookPublishYearInput.setName("bookPublishYearInput");
        bookTable.setName("bookTable");
        bookTitleInput.setName("bookTitleInput");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminManageItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminManageItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminManageItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminManageItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminManageItems().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookButton;
    private javax.swing.JTextField bookAuthorInput;
    private javax.swing.JLabel bookAuthorText;
    private javax.swing.JTextArea bookDescriptionInput;
    private javax.swing.JLabel bookDescriptionText;
    private javax.swing.JComboBox<String> bookEditionInput;
    private javax.swing.JLabel bookEditionText;
    private javax.swing.JComboBox<String> bookGenreInput;
    private javax.swing.JLabel bookGenreText;
    private javax.swing.JTextField bookLocationInput;
    private javax.swing.JLabel bookLocationText;
    private javax.swing.JComboBox<String> bookPublishYearInput;
    private javax.swing.JLabel bookPublishYearText;
    private javax.swing.JTable bookTable;
    private javax.swing.JTextField bookTitleInput;
    private javax.swing.JLabel bookTitleText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JLabel searchTitle;
    // End of variables declaration//GEN-END:variables
}
